// ================================
//  „Ç∞„É≠„Éº„Éê„É´Â§âÊï∞„Å®ÂÆöÊï∞
// ================================
let currentUser = null;
let currentProfile = null;
let profiles = [];
let studyStats = {};

// Âπ¥ÈΩ¢„Ç∞„É´„Éº„Éó„ÅÆÂÆöÁæ©
const AGE_GROUPS = {
    YOUNG: { min: 6, max: 8, label: '6-8Ê≠≥' },
    MIDDLE: { min: 9, max: 12, label: '9-12Ê≠≥' },
    TEEN: { min: 13, max: 18, label: '13Ê≠≥‰ª•‰∏ä' }
};

// „É´„Éº„É†Ë®≠ÂÆö
const ROOMS = {
    young: [
        { id: 'math', icon: 'üî¢', name: '„Åï„Çì„Åô„ÅÜ', description: '„Åü„ÅÆ„Åó„Åè„Åë„ÅÑ„Åï„Çì' },
        { id: 'english', icon: 'üåç', name: '„Åà„ÅÑ„Åî', description: 'ABC„Åã„Çâ„ÅØ„Åò„ÇÅ„Çà„ÅÜ' },
        { id: 'japanese', icon: 'üìñ', name: '„Åì„Åè„Åî', description: '„Å≤„Çâ„Åå„Å™„Éª„Åã„Çì„Åò' },
        { id: 'science', icon: 'üî¨', name: '„Çä„Åã', description: '„Åµ„Åó„Åé„Çí„Åø„Å§„Åë„Çà„ÅÜ' },
        { id: 'social', icon: 'üó∫Ô∏è', name: '„Åó„ÇÉ„Åã„ÅÑ', description: '„Åõ„Åã„ÅÑ„Çí„Åó„Çç„ÅÜ' },
        { id: 'counseling', icon: 'üí≠', name: '„Åù„ÅÜ„Å†„Çì', description: '„Å™„ÇÑ„Åø„Çí„Åç„ÅÑ„Å¶' },
        { id: 'homework', icon: 'üìù', name: '„Åó„ÇÖ„Åè„Å†„ÅÑ', description: '„ÅÑ„Å£„Åó„Çá„Å´„Åå„Çì„Å∞„Çç„ÅÜ' },
        { id: 'chat', icon: 'üí¨', name: '„Åä„ÅØ„Å™„Åó', description: '„Å™„Çì„Åß„ÇÇ„ÅØ„Å™„Åù„ÅÜ' }
    ],
    middle: [
        { id: 'math', icon: 'üìê', name: 'ÁÆóÊï∞„ÉªÊï∞Â≠¶', description: 'Ë®àÁÆó„Å®Âõ≥ÂΩ¢' },
        { id: 'english', icon: 'üåç', name: 'Ëã±Ë™û', description: 'Ë™≠„ÅøÊõ∏„Åç‰ºöË©±' },
        { id: 'japanese', icon: 'üìñ', name: 'ÂõΩË™û', description: 'Ë™≠Ëß£„Å®‰ΩúÊñá' },
        { id: 'science', icon: 'üî¨', name: 'ÁêÜÁßë', description: 'ÂÆüÈ®ì„Å®Ë¶≥ÂØü' },
        { id: 'social', icon: 'üó∫Ô∏è', name: 'Á§æ‰ºö', description: 'Ê≠¥Âè≤„Å®Âú∞ÁêÜ' },
        { id: 'counseling', icon: 'üí≠', name: 'ÊÇ©„ÅøÁõ∏Ë´á', description: 'Âõ∞„Å£„Åü„Å®„Åç„Å´' },
        { id: 'homework', icon: 'üìù', name: 'ÂÆøÈ°å„Éò„É´„Éó', description: 'ÂàÜ„Åã„Çâ„Å™„ÅÑÂïèÈ°å' },
        { id: 'chat', icon: 'üí¨', name: '„Éï„É™„Éº„Éà„Éº„ÇØ', description: 'Ëá™Áî±„Å™‰ºöË©±' }
    ],
    teen: [
        { id: 'math', icon: 'üìä', name: 'Êï∞Â≠¶', description: 'È´òÂ∫¶„Å™Êï∞Â≠¶' },
        { id: 'english', icon: 'üåç', name: 'Ëã±Ë™û', description: 'ÂÆüË∑µÁöÑËã±Ë™û' },
        { id: 'japanese', icon: 'üìñ', name: 'ÂõΩË™û', description: 'Ë´ñÁêÜÁöÑÊñáÁ´†' },
        { id: 'science', icon: 'üî¨', name: 'ÁêÜÁßë', description: 'Â∞ÇÈñÄÁöÑÂÜÖÂÆπ' },
        { id: 'social', icon: 'üó∫Ô∏è', name: 'Á§æ‰ºö', description: 'Áèæ‰ª£Á§æ‰ºöÁêÜËß£' },
        { id: 'counseling', icon: 'üí≠', name: 'Áõ∏Ë´áÂÆ§', description: 'ÈÄ≤Ë∑Ø„ÇÑÊÇ©„Åø', badge: 'Private' },
        { id: 'study', icon: 'üìö', name: 'Â≠¶ÁøíË®àÁîª', description: 'ÂäπÁéáÁöÑÂ≠¶ÁøíÊ≥ï' },
        { id: 'career', icon: 'üéØ', name: '„Ç≠„É£„É™„Ç¢', description: 'Â∞ÜÊù•„Å´„Å§„ÅÑ„Å¶' }
    ]
};

// ================================
//  ÂàùÊúüÂåñÂá¶ÁêÜ
// ================================
document.addEventListener('DOMContentLoaded', () => {
    initializeApp();
    setupEventListeners();
});

async function initializeApp() {
    try {
        // FirebaseË™çË®ºÁ¢∫Ë™ç
        await checkAuthentication();
        
        // „Éó„É≠„Éï„Ç°„Ç§„É´„Éá„Éº„ÇøË™≠„ÅøËæº„Åø
        await loadProfiles();
        
        // UI„ÅÆÂàùÊúüË°®Á§∫
        showProfileSelector();
        
        // Êó•‰ªòÂà∂Èôê„ÅÆË®≠ÂÆö
        setDateLimits();
        
    } catch (error) {
        console.error('ÂàùÊúüÂåñ„Ç®„É©„Éº:', error);
        alert('„Ç¢„Éó„É™„ÅÆËµ∑Âãï„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ„É≠„Ç∞„Ç§„É≥„ÅóÁõ¥„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ');
        window.location.href = 'index.html';
    }
}

function setDateLimits() {
    const birthdateInput = document.getElementById('child-birthdate');
    if (birthdateInput) {
        const today = new Date();
        const minDate = new Date(today.getFullYear() - 18, today.getMonth(), today.getDate());
        const maxDate = new Date(today.getFullYear() - 6, today.getMonth(), today.getDate());
        
        birthdateInput.max = maxDate.toISOString().split('T')[0];
        birthdateInput.min = minDate.toISOString().split('T')[0];
    }
}

// ================================
//  „Ç§„Éô„É≥„Éà„É™„Çπ„Éä„ÉºË®≠ÂÆö
// ================================
function setupEventListeners() {
    // PIN„Ç≥„Éº„ÉâÂÖ•Âäõ„ÅÆËá™Âãï„Éï„Ç©„Éº„Ç´„Çπ
    const pinInputs = document.querySelectorAll('.pin-digit');
    pinInputs.forEach((input, index) => {
        input.addEventListener('input', (e) => {
            const value = e.target.value;
            
            if (value) {
                e.target.classList.add('filled');
                if (index < pinInputs.length - 1) {
                    pinInputs[index + 1].focus();
                }
            } else {
                e.target.classList.remove('filled');
            }
            
            checkPINComplete();
        });
        
        input.addEventListener('keydown', (e) => {
            if (e.key === 'Backspace' && !e.target.value && index > 0) {
                pinInputs[index - 1].focus();
            }
        });
    });
}

function checkPINComplete() {
    const pinInputs = document.querySelectorAll('.pin-digit');
    const allFilled = Array.from(pinInputs).every(input => input.value);
    document.querySelector('.submit-pin-btn').disabled = !allFilled;
}

// ================================
//  Ë™çË®ºÈñ¢ÈÄ£
// ================================
async function checkAuthentication() {
    return new Promise((resolve) => {
        if (typeof firebase === 'undefined') {
            // FirebaseÊú™Ë®≠ÂÆö„ÅÆÂ†¥Âêà„ÅØ„ÉÄ„Éü„Éº„Éá„Éº„Çø„ÅßÂãï‰Ωú
            console.log('Firebase„ÅåË®≠ÂÆö„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ„Éá„É¢„É¢„Éº„Éâ„ÅßÂãï‰Ωú„Åó„Åæ„Åô„ÄÇ');
            currentUser = { email: 'demo@example.com', uid: 'demo-user' };
            resolve();
            return;
        }
        
        firebase.auth().onAuthStateChanged(user => {
            if (user) {
                currentUser = user;
                resolve();
            } else {
                window.location.href = 'index.html';
            }
        });
    });
}

// ================================
//  „Éó„É≠„Éï„Ç°„Ç§„É´ÁÆ°ÁêÜ
// ================================
async function loadProfiles() {
    // „É≠„Éº„Ç´„É´„Çπ„Éà„É¨„Éº„Ç∏„Åã„ÇâË™≠„ÅøËæº„ÅøÔºà„Éá„É¢Áî®Ôºâ
    const savedProfiles = localStorage.getItem('childProfiles');
    
    if (savedProfiles) {
        profiles = JSON.parse(savedProfiles);
    } else {
        // „Éá„É¢Áî®„ÅÆ„Çµ„É≥„Éó„É´„Éó„É≠„Éï„Ç°„Ç§„É´
        profiles = [
            {
                id: 'profile-1',
                nickname: '„Åü„Çç„ÅÜ',
                birthdate: '2015-06-15',
                avatar: 'ü¶Å',
                pin: '1234',
                stats: {
                    todayCount: 5,
                    streakDays: 3,
                    totalCount: 42
                }
            },
            {
                id: 'profile-2',
                nickname: '„ÅØ„Å™„Åì',
                birthdate: '2017-03-22',
                avatar: 'üê∞',
                pin: '5678',
                stats: {
                    todayCount: 3,
                    streakDays: 1,
                    totalCount: 15
                }
            }
        ];
        
        localStorage.setItem('childProfiles', JSON.stringify(profiles));
    }
}

function saveProfiles() {
    localStorage.setItem('childProfiles', JSON.stringify(profiles));
}

// ================================
//  „Éó„É≠„Éï„Ç°„Ç§„É´ÈÅ∏ÊäûÁîªÈù¢
// ================================
function showProfileSelector() {
    document.getElementById('profile-selector').style.display = 'flex';
    document.getElementById('pin-input').style.display = 'none';
    document.getElementById('select-container').style.display = 'none';
    
    renderProfiles();
}

function renderProfiles() {
    const grid = document.getElementById('profile-grid');
    grid.innerHTML = '';
    
    profiles.forEach(profile => {
        const age = calculateAge(profile.birthdate);
        const card = document.createElement('div');
        card.className = 'profile-card';
        card.onclick = () => selectProfile(profile);
        
        card.innerHTML = `
            <span class="profile-avatar">${profile.avatar}</span>
            <h3 class="profile-name">${profile.nickname}</h3>
            <span class="profile-age">${age}Ê≠≥</span>
        `;
        
        grid.appendChild(card);
    });
}

function calculateAge(birthdate) {
    const today = new Date();
    const birth = new Date(birthdate);
    let age = today.getFullYear() - birth.getFullYear();
    const monthDiff = today.getMonth() - birth.getMonth();
    
    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {
        age--;
    }
    
    return age;
}

// ================================
//  PINË™çË®º
// ================================
function selectProfile(profile) {
    currentProfile = profile;
    
    // PINÂÖ•ÂäõÁîªÈù¢„ÇíË°®Á§∫
    document.getElementById('profile-selector').style.display = 'none';
    document.getElementById('pin-input').style.display = 'flex';
    
    // „Éó„É≠„Éï„Ç°„Ç§„É´ÊÉÖÂ†±„ÇíË°®Á§∫
    document.getElementById('selected-avatar').textContent = profile.avatar;
    document.getElementById('selected-name').textContent = profile.nickname;
    
    // PINÂÖ•Âäõ„Çí„É™„Çª„ÉÉ„Éà
    document.querySelectorAll('.pin-digit').forEach(input => {
        input.value = '';
        input.classList.remove('filled');
    });
    document.querySelector('.pin-digit').focus();
    document.getElementById('pin-error').style.display = 'none';
}

function verifyPIN() {
    const pinInputs = document.querySelectorAll('.pin-digit');
    const enteredPIN = Array.from(pinInputs).map(input => input.value).join('');
    
    if (enteredPIN === currentProfile.pin) {
        // ÊàêÂäü
        showMainScreen();
    } else {
        // „Ç®„É©„ÉºË°®Á§∫
        document.getElementById('pin-error').style.display = 'block';
        
        // ÂÖ•Âäõ„Çí„É™„Çª„ÉÉ„Éà
        pinInputs.forEach(input => {
            input.value = '';
            input.classList.remove('filled');
        });
        pinInputs[0].focus();
        
        // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„Çí3ÁßíÂæå„Å´ÈùûË°®Á§∫
        setTimeout(() => {
            document.getElementById('pin-error').style.display = 'none';
        }, 3000);
    }
}

function backToProfiles() {
    showProfileSelector();
}

// ================================
//  „É°„Ç§„É≥ÁîªÈù¢
// ================================
function showMainScreen() {
    document.getElementById('pin-input').style.display = 'none';
    document.getElementById('select-container').style.display = 'block';
    
    // „É¶„Éº„Ç∂„ÉºÊÉÖÂ†±„ÇíË°®Á§∫
    const age = calculateAge(currentProfile.birthdate);
    const ageGroup = getAgeGroup(age);
    
    document.getElementById('user-avatar').textContent = currentProfile.avatar;
    document.getElementById('user-nickname').textContent = currentProfile.nickname;
    document.getElementById('age-display').textContent = `${age}Ê≠≥`;
    
    // Âπ¥ÈΩ¢„Å´Âøú„Åò„Åü„ÇØ„É©„Çπ„ÇíËøΩÂä†
    document.body.className = '';
    if (age >= 6 && age <= 8) {
        document.body.classList.add('age-6-8');
    } else if (age >= 13) {
        document.body.classList.add('age-13-plus');
    }
    
    // „É´„Éº„É†„ÇíË°®Á§∫
    renderRooms(ageGroup);
    
    // Áµ±Ë®à„ÇíË°®Á§∫
    updateStats();
    
    // ÁõÆÊ®ôÈÄ≤Êçó„ÇíÊõ¥Êñ∞
    updateGoalProgress();
}

function getAgeGroup(age) {
    if (age >= 6 && age <= 8) return 'young';
    if (age >= 9 && age <= 12) return 'middle';
    return 'teen';
}

function renderRooms(ageGroup) {
    const grid = document.getElementById('room-grid');
    grid.innerHTML = '';
    
    const rooms = ROOMS[ageGroup] || ROOMS.middle;
    
    rooms.forEach(room => {
        const card = document.createElement('div');
        card.className = 'room-card';
        card.onclick = () => enterRoom(room);
        
        let badgeHTML = '';
        if (room.badge) {
            badgeHTML = `<span class="room-badge">${room.badge}</span>`;
        }
        
        card.innerHTML = `
            ${badgeHTML}
            <span class="room-icon">${room.icon}</span>
            <h4 class="room-name">${room.name}</h4>
            <p class="room-description">${room.description}</p>
        `;
        
        grid.appendChild(card);
    });
}

function updateStats() {
    const stats = currentProfile.stats || {
        todayCount: 0,
        streakDays: 0,
        totalCount: 0
    };
    
    document.getElementById('today-count').textContent = `${stats.todayCount}Âõû`;
    document.getElementById('streak-count').textContent = `${stats.streakDays}Êó•`;
    document.getElementById('total-count').textContent = `${stats.totalCount}Âõû`;
}

function updateGoalProgress() {
    const roomsVisited = currentProfile.roomsVisitedToday || 0;
    const goalTarget = 3;
    const progress = Math.min((roomsVisited / goalTarget) * 100, 100);
    
    document.getElementById('goal-progress').style.width = `${progress}%`;
    document.getElementById('goal-count').textContent = `${roomsVisited}/${goalTarget}`;
    
    if (roomsVisited >= goalTarget) {
        document.getElementById('goal-text').textContent = 'ÁõÆÊ®ôÈÅîÊàêÔºÅ„Åô„Åî„ÅÑÔºÅüéâ';
    }
}

// ================================
//  „É´„Éº„É†ÈÅ∑Áßª
// ================================
function enterRoom(room) {
    // ÈÅ∏Êäû„Åó„Åü„É´„Éº„É†ÊÉÖÂ†±„Çí‰øùÂ≠ò
    const roomData = {
        ...room,
        profile: currentProfile,
        age: calculateAge(currentProfile.birthdate),
        ageGroup: getAgeGroup(calculateAge(currentProfile.birthdate))
    };
    
    localStorage.setItem('selectedRoom', JSON.stringify(roomData));
    
    // Áµ±Ë®à„ÇíÊõ¥Êñ∞
    updateRoomVisit(room.id);
    
    // „ÉÅ„É£„ÉÉ„Éà„É´„Éº„É†„Å∏ÈÅ∑Áßª
    window.location.href = 'chat-room.html';
}

function updateRoomVisit(roomId) {
    // Ë®™ÂïèË®òÈå≤„ÇíÊõ¥Êñ∞
    if (!currentProfile.roomsVisitedToday) {
        currentProfile.roomsVisitedToday = 0;
    }
    currentProfile.roomsVisitedToday++;
    
    // Áµ±Ë®à„ÇíÊõ¥Êñ∞
    currentProfile.stats = currentProfile.stats || {};
    currentProfile.stats.todayCount = (currentProfile.stats.todayCount || 0) + 1;
    currentProfile.stats.totalCount = (currentProfile.stats.totalCount || 0) + 1;
    
    // ‰øùÂ≠ò
    const profileIndex = profiles.findIndex(p => p.id === currentProfile.id);
    if (profileIndex !== -1) {
        profiles[profileIndex] = currentProfile;
        saveProfiles();
    }
}

// ================================
//  „É¶„Éº„Ç∂„ÉºÂàá„ÇäÊõø„Åà
// ================================
function switchUser() {
    if (confirm('Âà•„ÅÆ„É¶„Éº„Ç∂„Éº„Å´Âàá„ÇäÊõø„Åà„Åæ„Åô„ÅãÔºü')) {
        currentProfile = null;
        showProfileSelector();
    }
}

// ================================
//  „Éó„É≠„Éï„Ç°„Ç§„É´ËøΩÂä†
// ================================
function showAddProfileModal() {
    document.getElementById('add-profile-modal').style.display = 'flex';
}

function closeModal(modalId) {
    document.getElementById(modalId).style.display = 'none';
}

async function addNewProfile(event) {
    event.preventDefault();
    
    const nickname = document.getElementById('child-nickname').value;
    const birthdate = document.getElementById('child-birthdate').value;
    const avatar = document.querySelector('input[name="avatar"]:checked').value;
    const pin = document.getElementById('child-pin').value;
    
    // Âπ¥ÈΩ¢Á¢∫Ë™ç
    const age = calculateAge(birthdate);
    if (age < 6 || age > 18) {
        alert('ÂØæË±°Âπ¥ÈΩ¢„ÅØ6Ê≠≥„Åã„Çâ18Ê≠≥„Åæ„Åß„Åß„Åô');
        return;
    }
    
    // Êñ∞„Åó„ÅÑ„Éó„É≠„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê
    const newProfile = {
        id: `profile-${Date.now()}`,
        nickname,
        birthdate,
        avatar,
        pin,
        stats: {
            todayCount: 0,
            streakDays: 0,
            totalCount: 0
        },
        createdAt: new Date().toISOString()
    };
    
    // ‰øùÂ≠ò
    profiles.push(newProfile);
    saveProfiles();
    
    // „É¢„Éº„ÉÄ„É´„ÇíÈñâ„Åò„Å¶Êõ¥Êñ∞
    closeModal('add-profile-modal');
    renderProfiles();
    
    // „Éï„Ç©„Éº„É†„É™„Çª„ÉÉ„Éà
    document.getElementById('add-profile-form').reset();
    
    alert(`${nickname}„Åï„Çì„ÅÆ„Éó„É≠„Éï„Ç°„Ç§„É´„ÇíËøΩÂä†„Åó„Åæ„Åó„ÅüÔºÅ`);
}

// ================================
//  ‰øùË≠∑ËÄÖË®≠ÂÆö
// ================================
function openParentSettings() {
    // PINÂÖ•Âäõ„Å™„Å©„ÅÆË™çË®º„ÇíËøΩÂä†
    const parentPIN = prompt('‰øùË≠∑ËÄÖÁî®PIN„Ç≥„Éº„Éâ„ÇíÂÖ•Âäõ„Åó„Å¶„Åè„Å†„Åï„ÅÑ');
    
    // „Éá„É¢Áî®: PIN„ÅØ "0000"
    if (parentPIN === '0000') {
        alert('‰øùË≠∑ËÄÖË®≠ÂÆöÁîªÈù¢„ÅØÁèæÂú®ÈñãÁô∫‰∏≠„Åß„Åô');
        // TODO: ‰øùË≠∑ËÄÖË®≠ÂÆöÁîªÈù¢„ÇíÂÆüË£Ö
    } else if (parentPIN !== null) {
        alert('PIN„Ç≥„Éº„Éâ„ÅåÊ≠£„Åó„Åè„ÅÇ„Çä„Åæ„Åõ„Çì');
    }
}

// ================================
//  „Åù„ÅÆ‰ªñ„ÅÆÊ©üËÉΩ
// ================================
function showHistory() {
    alert('Â≠¶ÁøíÂ±•Ê≠¥Ê©üËÉΩ„ÅØÁèæÂú®ÈñãÁô∫‰∏≠„Åß„Åô');
    // TODO: Â±•Ê≠¥ÁîªÈù¢„ÅÆÂÆüË£Ö
}

function showRewards() {
    alert('„Åî„Åª„ÅÜ„Å≥Ê©üËÉΩ„ÅØÁèæÂú®ÈñãÁô∫‰∏≠„Åß„Åô');
    // TODO: Â†±ÈÖ¨„Ç∑„Çπ„ÉÜ„É†„ÅÆÂÆüË£Ö
}

function showSettings() {
    alert('Ë®≠ÂÆöÁîªÈù¢„ÅØÁèæÂú®ÈñãÁô∫‰∏≠„Åß„Åô');
    // TODO: Ë®≠ÂÆöÁîªÈù¢„ÅÆÂÆüË£Ö
}

function showRooms() {
    // „Éõ„Éº„É†„Çø„Éñ„Çí„Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å´
    document.querySelectorAll('.nav-item').forEach(item => {
        item.classList.remove('active');
    });
    event.target.closest('.nav-item').classList.add('active');
}

// ================================
//  „É≠„Ç∞„Ç¢„Ç¶„Éà
// ================================
function logout() {
    if (confirm('„É≠„Ç∞„Ç¢„Ç¶„Éà„Åó„Åæ„Åô„ÅãÔºü')) {
        localStorage.clear();
        if (firebase && firebase.auth) {
            firebase.auth().signOut();
        }
        window.location.href = 'index.html';
    }
}